/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */


// this part of work is done by ID : 13.01.04.033

package book_share_borrow;

//import static book_share_borrow.User2_lend.con;
import java.io.BufferedOutputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.net.ServerSocket;
import java.net.Socket;

import java.sql.*;
import javax.swing.JOptionPane;

/**
 *
 * @author bdtech
 */
public class User2_borrow extends javax.swing.JFrame {

   //for database connection
     static final String JDBC_DRIVER = "com.mysql.jdbc.Driver";  
   static final String DB_URL = "jdbc:mysql://localhost/netprodb";

   //  Database credentials
   static final String USER = "root";
   static final String PASS = "";
   
   static String userId;
   
   static int AvailableCopyInt ;
    
     static Connection con;
    static Statement st;
    static ResultSet rs;
    
    
    
    static ServerSocket ss;
    static Socket s;
    static DataInputStream din;
    static DataOutputStream dout;
    
    
    static String msgout2="";
    
    
    public User2_borrow() {
        initComponents();
      setResizable(false);
      setTitle("User 2 Borrow book"); 
      
       
        try{
           
      con = DriverManager.getConnection("jdbc:mysql://localhost:3306/netprodb","root","");
      st = con.createStatement();
      String s = "SELECT DISTINCT BookName FROM user1";// getting book name in the combo box drop down
      rs = st.executeQuery(s);
      //System.out.println(rs.getString(1));
      
      
      
       
      
      String season = null;
        while(rs.next())
        {
            book_list.addItem(rs.getString(1));
            
            season = rs.getString(1);
            System.out.println("Book name:"+season);//printing the book names from client
        }
    }catch(Exception e){
        JOptionPane.showMessageDialog(null, "ERROR");
    }finally{
        try{
            st.close();
            rs.close();
            con.close();
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, "ERROR CLOSE");
        }
    }
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        msg_area = new javax.swing.JTextArea();
        msg_text = new javax.swing.JTextField();
        msg_send = new javax.swing.JButton();
        book_list = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        Profile_button = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(550, 450));

        msg_area.setColumns(20);
        msg_area.setRows(5);
        jScrollPane1.setViewportView(msg_area);

        msg_text.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                msg_textActionPerformed(evt);
            }
        });

        msg_send.setText("Request");
        msg_send.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                msg_sendActionPerformed(evt);
            }
        });

        book_list.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                book_listActionPerformed(evt);
            }
        });

        jLabel1.setText("Reply from lender");

        jLabel2.setText("User Id:");

        jLabel3.setText("Book Name:");

        Profile_button.setText("Profile");
        Profile_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Profile_buttonActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Cambria", 3, 18)); // NOI18N
        jLabel4.setText("Book sharing system");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(book_list, javax.swing.GroupLayout.PREFERRED_SIZE, 352, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(83, 83, 83)
                                    .addComponent(msg_send, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(msg_text, javax.swing.GroupLayout.PREFERRED_SIZE, 352, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(Profile_button, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(207, 207, 207)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(msg_text, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Profile_button, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 59, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(book_list, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(msg_send, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(46, 46, 46))
        );

        pack();
    }// </editor-fold>                        

    private void msg_sendActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
        
        try
        {
            String msgout="";
            msgout=msg_text.getText().trim();
            dout.writeUTF(msgout);
            
            
            
            userId=msg_text.getText().trim();
            
            msgout2="";
            msgout2=book_list.getSelectedItem().toString();// to get the name from the selected book from drop down
            dout.writeUTF(msgout2);// sending the book name to the lender(client)
            
            System.out.println(msgout2);
        }
        catch(Exception e)
        {
            
        }
        
    }                                        

    private void book_listActionPerformed(java.awt.event.ActionEvent evt) {                                          
        // TODO add your handling code here:
    }                                         

    private void msg_textActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
    }                                        

    private void Profile_buttonActionPerformed(java.awt.event.ActionEvent evt) {                                               
        // TODO add your handling code here:
        
        
        User2_insert_update_delete obj=new User2_insert_update_delete();
        obj.setVisible(true);
    }                                              

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(User1_borrow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(User1_borrow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(User1_borrow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(User1_borrow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new User2_borrow().setVisible(true);
            }
        });
        
        
        String msgin="";
        
        
        Connection conn = null;
   Statement stmt = null;
        
        
        try
        {
            ss=new ServerSocket(1201);
            s=ss.accept();
            
            din=new DataInputStream(s.getInputStream());
            dout=new DataOutputStream(s.getOutputStream());
            
            
            
            String acc="accepted";// this variable string is set to check if the reply is accepted or not
            
            
            
            
            while(!msgin.equals("exit"))
            {
                msgin=din.readUTF();
                
                msg_area.setText(msg_area.getText().trim()+"\n"+msgin);
                
                
                if(acc.equals(msgin.trim()))
                {
                    
                    
                     //try
             // this part is done to get book name, book ISBN, author name of the book which client has shared  
                    
      con = DriverManager.getConnection("jdbc:mysql://localhost:3306/netprodb","root","");
      st = con.createStatement();
      String s = "SELECT BookISBN FROM user1 where BookName='"+msgout2+"'";
      rs = st.executeQuery(s);
      
      
      
      
      
      
       String BookISBN = null;
        while(rs.next())
        {
            
            
            BookISBN = rs.getString(1);
            System.out.println("Book ISBN:"+BookISBN);
        }
           
        // for getting author
        
        s = "SELECT Author FROM user1 where BookName='"+msgout2+"'";
        
        rs = st.executeQuery(s);
      
      
      
       String Author = null;
        while(rs.next())
        {
            
            
            Author = rs.getString(1);
            System.out.println("author:"+Author);
        }
        
        
        
        //for getting available copy
        s = "SELECT AvailableCopy FROM user1 where BookName='"+msgout2+"'";
        
        rs = st.executeQuery(s);
      
      
      
       String AvailableCopy = null;
        while(rs.next())
        {
            
            
            AvailableCopy = rs.getString(1);
            AvailableCopyInt = Integer.parseInt(AvailableCopy);
            System.out.println("Available copy:"+AvailableCopy);
        }
        
        
       
        
        
        //inserting the value
        
         //STEP 2: Register JDBC driver
       
      Class.forName("com.mysql.jdbc.Driver");

      //STEP 3: Open a connection
      System.out.println("Connecting to a selected database...");
      conn = DriverManager.getConnection(DB_URL, USER, PASS);
      System.out.println("Connected database successfully...");
      
      //STEP 4: Execute a query
      
      
      
      System.out.println("Inserting records into the table...");
      stmt = conn.createStatement();
      
      String sql;
      if(userId.trim().equals("User2")&&AvailableCopyInt>0)
      {
          
          /*
       sql = "INSERT INTO user1(BookName,BookISBN,Author,AvailableCopy) " +
                   "VALUES ('"+msgout2+"', '"+BookISBN+"','"+Author+"', 18)";
      stmt.executeUpdate(sql);
      
      
      
      */
          
      //new
          
          PreparedStatement pst=null;
          
          //inserting into user2 table
               String qry="INSERT INTO user2 (BookName,BookISBN,Author,AvailableCopy) value(?,?,?,?)";
             
               
               //updating user1 table
               String qry2="UPDATE user1 set `AvailableCopy`=? WHERE BookName=?";
            try {
                pst=con.prepareStatement(qry);
                pst.setString(1, msgout2);
                pst.setString(2, BookISBN);
                pst.setString(3, Author);
                pst.setInt(4, 1);
                pst.execute();
                
                
                
                 pst=con.prepareStatement(qry2);
                pst.setInt(1, AvailableCopyInt-1);
                pst.setString(2, msgout2);
                
                pst.execute();
                
                
                
                
             // this part is done to share the book file from user2 to user1       
                
                int filesize=1022386;
        int bytesRead; 
        int currentTot = 0;
        Socket socket = new Socket("127.0.0.1",15123);
        byte [] bytearray = new byte [filesize];
        InputStream is = socket.getInputStream();
        FileOutputStream fos = new FileOutputStream("G:\\User2\\"+msgout2+".pdf");
        BufferedOutputStream bos = new BufferedOutputStream(fos);
        bytesRead = is.read(bytearray,0,bytearray.length);
        currentTot = bytesRead; 
        do {
            bytesRead = is.read(bytearray, currentTot, (bytearray.length-currentTot));
        if(bytesRead >= 0) currentTot += bytesRead; 
        } while(bytesRead > -1); 
        bos.write(bytearray, 0 , currentTot);
        bos.flush();
        bos.close(); 
        socket.close();
                
                
                
                
                
            }
            catch(SQLException ex)
            {
                
            }
      //new
      
      
      
      }
        
      
        
        
        
        
        
        
   
        
        
        
        
                //try
                
                
                    
                }
                
                
                
                
                
            }
            
            
            
            
        }catch(Exception e)
        {
            
        }
        
        
        
        
        
        
        
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton Profile_button;
    private javax.swing.JComboBox book_list;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private static javax.swing.JTextArea msg_area;
    private javax.swing.JButton msg_send;
    private javax.swing.JTextField msg_text;
    // End of variables declaration                   
}
